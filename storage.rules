rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // --- Rules for Test Files (Uploaded by Employers) ---
    // Example path: /tradTests/EMPLOYER_ID_123/test.pdf
    match /tradTests/{employerId}/{allPaths=**} {

      // ALLOW READ: A user can read a test if they are a logged-in Candidate.
      allow read: if request.auth != null &&
                     firestore.exists(/databases/(default)/documents/candidates/$(request.auth.uid));

      // ALLOW WRITE: A user can write a test if they are:
      // 1. Logged in
      // 2. Their user ID matches the {employerId} in the path
      // 3. Their user ID exists in the "employers" collection
      allow write: if request.auth != null && request.auth.uid == employerId &&
                      firestore.exists(/databases/(default)/documents/employers/$(employerId));
    }

    // --- Rules for Answer Submissions (Uploaded by Candidates) ---
    // Example path: /test-submissions/POST_ID_456/CANDIDATE_ID_789/submission.pdf
    match /test-submissions/{postId}/{candidateId}/{fileName} {

      // ALLOW WRITE: A user can upload an answer if they are:
      // 1. Logged in
      // 2. Their user ID matches the {candidateId} in the path
      // 3. Their user ID exists in the "candidates" collection
      allow write: if request.auth != null && request.auth.uid == candidateId &&
                      firestore.exists(/databases/(default)/documents/candidates/$(candidateId));
                      
      // ALLOW READ:
      // 1. The candidate who submitted it can read their own file.
      // 2. The employer who created the post can read the file.
      allow read: if request.auth != null &&
                   (request.auth.uid == candidateId || 
                    (exists(/databases/(default)/documents/jobs/$(postId)) && get(/databases/(default)/documents/jobs/$(postId)).data.employerId == request.auth.uid) ||
                    (exists(/databases/(default)/documents/internships/$(postId)) && get(/databases/(default)/documents/internships/$(postId)).data.employerId == request.auth.uid));
    }
  }
}
